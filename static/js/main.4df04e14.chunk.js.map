{"version":3,"sources":["components/PokemonContext.js","components/Nav.js","components/About.js","components/Shop.js","components/Pokemon.js","components/AddPokemon.js","components/PokemonList.js","components/ItemDetail.js","components/SearchBar.js","components/PokemonCard.jsx","components/Announcer.js","components/Pagination.jsx","components/RegionSelectorContext.jsx","components/RegionSelector.jsx","components/FetchPokemonList.jsx","components/Database.js","components/App.js","index.js"],"names":["PokemonContext","createContext","PokemonProvider","props","useState","name","type","id","pokemon","setPokemon","Provider","value","children","Nav","useContext","navStyle","color","className","style","to","length","About","Shop","useEffect","fetchItems","abilities","setAbilities","a","fetch","data","json","garchompData","console","log","map","ability","slot","replace","Pokemon","AddPokemon","setName","setType","onSubmit","e","preventDefault","prevPokemon","onChange","target","PokemonList","Item","match","fetchItem","params","setAbility","item","SearchBar","searchQuery","setSearchQuery","history","useHistory","action","method","autoComplete","push","htmlFor","onInput","placeholder","fontFamily","PokemonCard","types","details","reduce","acc","i","toUpperCase","src","sprites","front_default","moves","move","Announcer","message","role","Pagination","currentPage","setCurrentPage","RenderComponent","pageLimit","title","dataLimit","Math","ceil","changePage","event","pageNumber","Number","textContent","incrementPageBy","pageIncrement","parseInt","location","pathname","split","pop","futurePage","startIndex","endIndex","slice","getPaginatedData","index","pokeIndex","onClick","page","start","floor","Array","fill","_","idx","getPaginationGroup","RegionSelectorContext","RegionSelectorProvider","region","setRegion","RegionSelector","for","FetchPokemonList","dataN","pokemonData","Promise","all","results","poke","url","extraData","enhancedPokeData","Database","search","window","query","URLSearchParams","get","filteredMons","mons","filter","mon","includes","filterPokemon","Home","App","path","exact","component","ItemDetail","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4df04e14.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const PokemonContext = createContext();\r\n\r\nexport const PokemonProvider = (props) => {\r\n  const [pokemon, setPokemon] = useState([\r\n    { name: \"Magneton\", type: \"Steel/Electric\", id: 1 },\r\n    { name: \"Weezing\", type: \"Poison\", id: 2 },\r\n    { name: \"Skarmory\", type: \"Steel/Electric\", id: 3 },\r\n    { name: \"Magcargo\", type: \"Fire/Rock\", id: 4 },\r\n  ]);\r\n  return (\r\n    <PokemonContext.Provider value={[pokemon, setPokemon]}>\r\n      {props.children}\r\n    </PokemonContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PokemonContext } from \"./PokemonContext\";\r\n\r\nconst Nav = () => {\r\n  const [pokemon, setPokemon] = useContext(PokemonContext);\r\n  const navStyle = {\r\n    color: \"white\",\r\n  };\r\n  return (\r\n    <nav>\r\n      <h3>Logo</h3>\r\n      <ul className=\"nav-links\">\r\n        <Link style={navStyle} to=\"/shop\">\r\n          <li>Shop</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/about\">\r\n          <li>About</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/database\">\r\n          <li>Database</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/pokemonlist\">\r\n          <li>Pokemon List: {pokemon.length}</li>\r\n        </Link>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"headers\">About</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Shop() {\r\n  useEffect(() => {\r\n    fetchItems();\r\n    // console.log(abilities);\r\n  }, []);\r\n\r\n  const [abilities, setAbilities] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n    const data = await fetch(\"https://pokeapi.co/api/v2/pokemon/garchomp\");\r\n\r\n    const garchompData = await data.json();\r\n    setAbilities(garchompData.abilities);\r\n  };\r\n\r\n  console.log(abilities);\r\n  return (\r\n    <div>\r\n      <h1 className=\"headers\">Shop</h1>\r\n      <div>\r\n        <h2>Garchomp abilities</h2>\r\n        {abilities.map((ability) => (\r\n          <h3 key={ability.slot}>\r\n            <Link to={`/shop/${ability.slot}`}>\r\n              {ability.ability.name.replace(\"-\", \" \")}\r\n            </Link>\r\n          </h3>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// {items.map((item) => {\r\n//   item.abilities;\r\n// })}\r\n\r\nexport default Shop;\r\n","import React from \"react\";\r\n\r\nconst Pokemon = ({ name, type }) => {\r\n  return (\r\n    <div>\r\n      <h3>{name}</h3>\r\n      <p>{type}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { PokemonContext } from \"./PokemonContext\";\r\n\r\nconst AddPokemon = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [pokemon, setPokemon] = useContext(PokemonContext);\r\n\r\n  const updateName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const updateType = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n\r\n  const addPokemon = (e) => {\r\n    e.preventDefault();\r\n    setPokemon((prevPokemon) => [...prevPokemon, { name: name, type: type }]);\r\n  };\r\n  return (\r\n    <form onSubmit={addPokemon}>\r\n      <input type=\"text\" name=\"name\" value={name} onChange={updateName}></input>\r\n      <input type=\"text\" name=\"type\" value={type} onChange={updateType}></input>\r\n      <button>Submit idea</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddPokemon;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Pokemon from \"./Pokemon\";\r\nimport AddPokemon from \"./AddPokemon\";\r\nimport { PokemonContext } from \"./PokemonContext\";\r\n\r\nconst PokemonList = () => {\r\n  const [pokemon, setPokemon] = useContext(PokemonContext);\r\n  return (\r\n    <div>\r\n      <h1 className=\"headers\">Pokemon List</h1>\r\n      <AddPokemon />\r\n      {pokemon.map((pokemon) => (\r\n        <Pokemon name={pokemon.name} type={pokemon.type} key={pokemon.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Item({ match }) {\r\n  useEffect(() => {\r\n    fetchItem();\r\n    console.log(match.params.id);\r\n  }, []);\r\n\r\n  const [ability, setAbility] = useState([]);\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const fetchItem = async () => {\r\n    const fetchItem = await fetch(\r\n      `https://pokeapi.co/api/v2/ability/${match.params.id}`\r\n    );\r\n    const item = await fetchItem.json();\r\n    setAbility(item.pokemon);\r\n  };\r\n\r\n  const fetchImg = async (url) => {\r\n    const fetchImg = await fetch(`${url}`);\r\n    const img = await fetchImg.json();\r\n\r\n    setImage(img.sprites.front_default);\r\n  };\r\n  console.log(ability);\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Other pokemon with this ability\r\n        {ability.map((pokemon) => (\r\n          <h2>{pokemon.pokemon.name}</h2>\r\n          //   <img src={pokemon.pokemon.sprites.front_female} />\r\n        ))}\r\n        {/* {ability.map((pokemon) => (\r\n            fetchImg(pokemon.pokemon.url);\r\n           <img src={image}/> \r\n        ))} */}\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n// {items.map((item) => {\r\n//   item.abilities;\r\n// })}\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst SearchBar = ({ searchQuery, setSearchQuery }) => {\r\n  const history = useHistory();\r\n  const onSubmit = (e) => {\r\n    history.push(`?s=${searchQuery}`);\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <form\r\n        className=\"search-bar-stack\"\r\n        action=\"/\"\r\n        method=\"get\"\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <label htmlFor=\"header-search\">\r\n          <span className=\"visually-hidden search-label\">Search Pokemon: </span>\r\n        </label>\r\n        <input\r\n          value={searchQuery}\r\n          onInput={setSearchQuery}\r\n          type=\"text\"\r\n          id=\"header-search\"\r\n          placeholder=\"Search\"\r\n          name=\"s\"\r\n          className=\"search-input\"\r\n          style={{ fontFamily: \"'Sophia Pro', sans-serif\" }}\r\n        ></input>\r\n        <button className=\"search-button\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./PokemonCard.css\";\r\n\r\nconst PokemonCard = ({ pokemon }) => {\r\n  const types = pokemon.details.types.reduce((acc, type, i) => {\r\n    return acc + type.type.name + (i === 1 ? \"\" : \" -\");\r\n  }, \"\");\r\n\r\n  return (\r\n    <div className=\"pokemon-card\">\r\n      <h1 className=\"pokemon-card-title\">\r\n        {pokemon.details.id}. {pokemon.name.toUpperCase()}\r\n      </h1>\r\n      <div className=\"pokemon-card-picture-border\">\r\n        <div className={`pokemon-card-picture ${types}`}>\r\n          <img src={pokemon.details.sprites.front_default}></img>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {pokemon.details.moves.map((move, i) => {\r\n          if (i < 4) {\r\n            return <p>{move.move.name.replace(\"-\", \" \")}</p>;\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React from \"react\";\r\nimport \"./Announcer.css\";\r\n\r\nconst Announcer = ({ message }) => {\r\n  return (\r\n    <div className=\"announcer\" role=\"region\" aria-live=\"polite\">\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Announcer;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Pagination({\r\n  currentPage,\r\n  setCurrentPage,\r\n  searchQuery,\r\n  setSearchQuery,\r\n  data,\r\n  RenderComponent,\r\n  title,\r\n  pageLimit,\r\n  dataLimit,\r\n}) {\r\n  const history = useHistory();\r\n  const [pages] = useState(Math.ceil(data.length / dataLimit));\r\n\r\n  function goToNextPage() {\r\n    setCurrentPage((page) => page + 1);\r\n  }\r\n\r\n  function goToPreviousPage() {\r\n    setCurrentPage((page) => page - 1);\r\n  }\r\n\r\n  function changePage(event) {\r\n    const pageNumber = Number(event.target.textContent);\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  const getPaginatedData = () => {\r\n    const startIndex = currentPage * dataLimit - dataLimit;\r\n    const endIndex = startIndex + dataLimit;\r\n    return data.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getPaginationGroup = () => {\r\n    let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\r\n    return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\r\n  };\r\n\r\n  console.log(\"hustory\", history);\r\n\r\n  const incrementPageBy = (pageIncrement) => {\r\n    const currentPage = parseInt(history.location.pathname.split(\"/\").pop());\r\n    const futurePage = currentPage + pageIncrement;\r\n    if (futurePage < 1) return currentPage;\r\n    return futurePage;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"database-container\">\r\n        {getPaginatedData().map((data, index) => (\r\n          <RenderComponent key={index} pokeIndex={index} pokemon={data} />\r\n        ))}\r\n        {console.log(\"current page: \", currentPage)}\r\n      </div>\r\n\r\n      {/* show pagination */}\r\n      <div className=\"pagination\">\r\n        {/* Previous button */}\r\n        <Link to={`/database/${incrementPageBy(1)}`}>\r\n          <button className=\"pagination-detail\" onClick={goToPreviousPage}>\r\n            Prev\r\n          </button>\r\n        </Link>\r\n\r\n        {/* page numbers */}\r\n        {getPaginationGroup().map((item, index) => (\r\n          <Link to={`/database/${index + 1}`}>\r\n            <button\r\n              key={index}\r\n              onClick={changePage}\r\n              className={`pagination-detail pagination-number  paginationItem ${\r\n                currentPage === item ? \"active\" : null\r\n              }`}\r\n            >\r\n              {console.log(item)}\r\n\r\n              <span>{item}</span>\r\n            </button>\r\n          </Link>\r\n        ))}\r\n        {/* Next button */}\r\n        <Link to={`/database/${incrementPageBy(-1)}`}>\r\n          <button className=\"pagination-detail\" onClick={goToNextPage}>\r\n            Next\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const RegionSelectorContext = createContext();\r\n\r\nexport const RegionSelectorProvider = (props) => {\r\n  const [region, setRegion] = useState(\"Kanto\");\r\n  return (\r\n    <RegionSelectorContext.Provider value={[region, setRegion]}>\r\n      {props.children}\r\n    </RegionSelectorContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { RegionSelectorContext } from \"./RegionSelectorContext\";\r\n\r\nconst RegionSelector = () => {\r\n  const [region, setRegion] = useContext(RegionSelectorContext);\r\n  const changeRegion = (e) => {\r\n    setRegion(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Region Selector</h2>\r\n      <label for=\"region-select\">Choose a region: </label>\r\n      <div className=\"select\">\r\n        <select onChange={changeRegion} name=\"region\" id=\"region-select\">\r\n          <option value=\"Kanto\">Kanto</option>\r\n          <option value=\"Johto\">Johto</option>\r\n          <option value=\"Hoenn\">Hoenn</option>\r\n          <option value=\"Sinnoh\">Sinnoh</option>\r\n          <option value=\"Unova\">Unova</option>\r\n          <option value=\"Kalos\">Kalos</option>\r\n          <option value=\"Alola\">Alola</option>\r\n          <option value=\"Galar\">Galar</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegionSelector;\r\n","import React from \"react\";\r\n\r\nexport const FetchPokemonList = async ({ pokemon, setPokemon, region }) => {\r\n  // Depending on the region coming from RegionSelector > Database > this component, FetchPokemonList retrieves the appropriate pokemon data from that region using a switch statement\r\n\r\n  //   const pokemonDataNumberSet = [0, 0];\r\n\r\n  //   switch (region) {\r\n  //     case \"Kanto\":\r\n  //       pokemonDataNumberSet[0] = 1;\r\n  //       pokemonDataNumberSet[1] = 150;\r\n  //       break;\r\n\r\n  //     case \"Johto\":\r\n  //       pokemonDataNumberSet[0] = 151;\r\n  //       pokemonDataNumberSet[1] = 276;\r\n  //       break;\r\n  //   }\r\n\r\n  //   const data = [];\r\n  //   for (let i = pokemonDataNumberSet[0]; i < pokemonDataNumberSet[1]; i++) {\r\n  //     data.push(\r\n  //       await fetch(`https://pokeapi.co/api/v2/pokemon/${i}\r\n  //     `)\r\n  //     );\r\n  //   }\r\n  //   console.log(data);\r\n\r\n  const dataN = [];\r\n  for (let i = 1; i < 152; i++) {\r\n    dataN.push(\r\n      await fetch(`https://pokeapi.co/api/v2/generation/1/\r\n        `)\r\n    );\r\n  }\r\n  console.log(dataN);\r\n\r\n  const data = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=75\r\n    `);\r\n\r\n  const pokemonData = await data.json();\r\n  console.log(pokemonData);\r\n\r\n  const enhancedPokeData = await Promise.all(\r\n    pokemonData.results.map(async (poke) => {\r\n      let extraData = await fetch(poke.url);\r\n      extraData = await extraData.json();\r\n      poke.details = extraData;\r\n      return poke;\r\n    })\r\n  );\r\n\r\n  setPokemon(enhancedPokeData);\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport PokemonCard from \"./PokemonCard\";\r\nimport Announcer from \"./Announcer\";\r\nimport Pagination from \"./Pagination\";\r\nimport RegionSelector from \"./RegionSelector\";\r\n\r\nimport { FetchPokemonList } from \"./FetchPokemonList\";\r\n\r\nimport \"./Paginator.css\";\r\nimport {\r\n  RegionSelectorContext,\r\n  RegionSelectorProvider,\r\n} from \"./RegionSelectorContext\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Database() {\r\n  useEffect(() => {\r\n    FetchPokemonList({\r\n      pokemon: pokemon,\r\n      setPokemon: setPokemon,\r\n      region: region,\r\n    });\r\n  }, []);\r\n\r\n  // Regions coming from RegionSelector controlled by Context\r\n  const [region, setRegion] = useContext(RegionSelectorContext);\r\n\r\n  // Search bar functionality\r\n  const { search } = window.location;\r\n  const query = new URLSearchParams(search).get(\"s\");\r\n\r\n  const filterPokemon = (mons, query) => {\r\n    if (!query) {\r\n      return mons;\r\n    }\r\n\r\n    return mons.filter((mon) => {\r\n      return mon.name.includes(query);\r\n    });\r\n  };\r\n\r\n  const [pokemon, setPokemon] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(query || \"\");\r\n  const filteredMons = filterPokemon(pokemon, searchQuery);\r\n  // Search bar functionality\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // Pagination\r\n\r\n  // const fetchPokemon = async (pokemon, setPokemon) => {\r\n  //   const data = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=75\r\n  //   `);\r\n\r\n  //   const pokemonData = await data.json();\r\n\r\n  //   const enhancedPokeData = await Promise.all(\r\n  //     pokemonData.results.map(async (poke) => {\r\n  //       let extraData = await fetch(poke.url);\r\n  //       extraData = await extraData.json();\r\n  //       poke.details = extraData;\r\n  //       return poke;\r\n  //     })\r\n  //   );\r\n\r\n  //   setPokemon(enhancedPokeData);\r\n  // };\r\n\r\n  const handleSearchQuery = (e) => {\r\n    if (currentPage !== 1) setCurrentPage(1);\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <RegionSelectorProvider> */}\r\n      <h1 className=\"headers\">{region} Pokemon Database</h1>\r\n      <RegionSelector />\r\n      <SearchBar searchQuery={searchQuery} setSearchQuery={handleSearchQuery} />\r\n      {/* <div className=\"database-container\">\r\n        {filteredMons.map((mon) => (\r\n          <PokemonCard pokemon={mon} />\r\n        ))}\r\n      </div> */}\r\n      <Pagination\r\n        searchQuery={searchQuery}\r\n        setSearchQuery={setSearchQuery}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        data={filteredMons}\r\n        RenderComponent={PokemonCard}\r\n        title=\"Pokemon Title\"\r\n        pageLimit={6}\r\n        dataLimit={20}\r\n      />\r\n      <Announcer message={`Found ${filteredMons.length} pokemon`} />\r\n      {/* </RegionSelectorProvider> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Database;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Nav from \"./Nav\";\r\nimport About from \"./About\";\r\nimport Shop from \"./Shop\";\r\nimport PokemonList from \"./PokemonList\";\r\nimport ItemDetail from \"./ItemDetail\";\r\nimport AddPokemon from \"./AddPokemon\";\r\nimport Database from \"./Database\";\r\nimport { PokemonProvider } from \"./PokemonContext\";\r\nimport { RegionSelectorProvider } from \"./RegionSelectorContext\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <PokemonProvider>\r\n        <div className=\"app\">\r\n          <Nav />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/about\" component={About} />\r\n            <RegionSelectorProvider>\r\n              <Route path=\"/database\" component={Database} />\r\n            </RegionSelectorProvider>\r\n            <Route path=\"/database/:pageNumber\" component={Database} />\r\n            <Route path=\"/shop\" exact component={Shop} />\r\n            <Route path=\"/shop/:id\" component={ItemDetail} />\r\n            <Route path=\"/pokemonlist\" component={PokemonList} />\r\n          </Switch>\r\n        </div>\r\n      </PokemonProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h1>Home Page</h1>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./components/App.css\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}