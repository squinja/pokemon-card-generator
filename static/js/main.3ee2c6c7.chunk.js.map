{"version":3,"sources":["components/PokemonContext.js","static/pokeball-icon.png","components/Nav.js","components/About.js","components/Shop.js","components/Pokemon.js","components/AddPokemon.js","components/PokemonList.js","components/ItemDetail.js","components/SearchPhotos.jsx","components/CardGenerator.jsx","components/SearchBar.js","components/PokemonCard.jsx","components/Announcer.js","components/Pagination.jsx","components/RegionSelectorContext.jsx","components/RegionSelector.jsx","components/LoaderGUI.jsx","components/FetchPokemonList.jsx","components/Database.js","components/BackgroundImage.jsx","components/App.js","index.js"],"names":["PokemonContext","createContext","PokemonProvider","props","useState","name","type","id","pokemon","setPokemon","Provider","value","children","Nav","useContext","navStyle","color","className","alt","src","icon","style","width","height","to","About","Shop","useEffect","fetchItems","abilities","setAbilities","a","fetch","data","json","garchompData","console","log","map","ability","slot","replace","Pokemon","AddPokemon","setName","setType","onSubmit","e","preventDefault","prevPokemon","onChange","target","PokemonList","Item","match","fetchItem","params","setAbility","item","SearchPhotos","placeholder","CardGenerator","SearchBar","searchQuery","setSearchQuery","history","useHistory","action","method","autoComplete","push","htmlFor","onInput","fontFamily","PokemonCard","types","reduce","acc","i","entry_number","toUpperCase","sprites","front_default","moves","move","Announcer","message","role","aria-live","Pagination","RegionSelectorContext","RegionSelectorProvider","region","setRegion","RegionSelector","for","selected","disabled","hidden","LoaderGUI","display","justifyContent","alignItems","FetchPokemonList","loading","setLoading","axios","get","dataN","Bluebird","pokemon_entries","poke","pokemon_species","url","varieties","finalData","detailedPokeArr","Database","search","window","location","query","URLSearchParams","filteredMons","mons","filter","mon","includes","filterPokemon","currentPage","setCurrentPage","2","3","4","5","8","12","16","20","length","BackgroundImage","App","path","component","exact","ItemDetail","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.3ee2c6c7.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const PokemonContext = createContext();\r\n\r\nexport const PokemonProvider = (props) => {\r\n  const [pokemon, setPokemon] = useState([\r\n    { name: \"Magneton\", type: \"Steel/Electric\", id: 1 },\r\n    { name: \"Weezing\", type: \"Poison\", id: 2 },\r\n    { name: \"Skarmory\", type: \"Steel/Electric\", id: 3 },\r\n    { name: \"Magcargo\", type: \"Fire/Rock\", id: 4 },\r\n  ]);\r\n  return (\r\n    <PokemonContext.Provider value={[pokemon, setPokemon]}>\r\n      {props.children}\r\n    </PokemonContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/pokeball-icon.bed19d90.png\";","import React, { useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PokemonContext } from \"./PokemonContext\";\r\n\r\nimport icon from \"./../static/pokeball-icon.png\";\r\n\r\nconst Nav = () => {\r\n  const [pokemon, setPokemon] = useContext(PokemonContext);\r\n  const navStyle = {\r\n    color: \"white\",\r\n  };\r\n  return (\r\n    <nav>\r\n      <div className=\"navbar-right\">\r\n        <img\r\n          alt=\"pokeball\"\r\n          src={icon}\r\n          style={{\r\n            width: \"80px\",\r\n            height: \"80px\",\r\n          }}\r\n        />\r\n        <h2 className=\"navbar-title\">Pokemon Database</h2>\r\n      </div>\r\n\r\n      <ul className=\"nav-links\">\r\n        <Link style={navStyle} to=\"/\">\r\n          <li>Database</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/cardgenerator\">\r\n          <li>Make a Card!</li>\r\n        </Link>\r\n        {/* <Link style={navStyle} to=\"/shop\">\r\n          <li>Shop</li>\r\n        </Link> */}\r\n        <Link style={navStyle} to=\"/about\">\r\n          <li>About</li>\r\n        </Link>\r\n\r\n        {/* <Link style={navStyle} to=\"/pokemonlist\">\r\n          <li>Pokemon List: {pokemon.length}</li>\r\n        </Link> */}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"headers\">About</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Shop() {\r\n  useEffect(() => {\r\n    fetchItems();\r\n    // console.log(abilities);\r\n  }, []);\r\n\r\n  const [abilities, setAbilities] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n    const data = await fetch(\"https://pokeapi.co/api/v2/pokemon/garchomp\");\r\n\r\n    const garchompData = await data.json();\r\n    setAbilities(garchompData.abilities);\r\n  };\r\n\r\n  console.log(abilities);\r\n  return (\r\n    <div>\r\n      <h1 className=\"headers\">Shop</h1>\r\n      <div>\r\n        <h2>Garchomp abilities</h2>\r\n        {abilities.map((ability) => (\r\n          <h3 key={ability.slot}>\r\n            <Link to={`/shop/${ability.slot}`}>\r\n              {ability.ability.name.replace(\"-\", \" \")}\r\n            </Link>\r\n          </h3>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// {items.map((item) => {\r\n//   item.abilities;\r\n// })}\r\n\r\nexport default Shop;\r\n","import React from \"react\";\r\n\r\nconst Pokemon = ({ name, type }) => {\r\n  return (\r\n    <div>\r\n      <h3>{name}</h3>\r\n      <p>{type}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { PokemonContext } from \"./PokemonContext\";\r\n\r\nconst AddPokemon = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [pokemon, setPokemon] = useContext(PokemonContext);\r\n\r\n  const updateName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const updateType = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n\r\n  const addPokemon = (e) => {\r\n    e.preventDefault();\r\n    setPokemon((prevPokemon) => [...prevPokemon, { name: name, type: type }]);\r\n  };\r\n  return (\r\n    <form onSubmit={addPokemon}>\r\n      <input type=\"text\" name=\"name\" value={name} onChange={updateName}></input>\r\n      <input type=\"text\" name=\"type\" value={type} onChange={updateType}></input>\r\n      <button>Submit idea</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddPokemon;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Pokemon from \"./Pokemon\";\r\nimport AddPokemon from \"./AddPokemon\";\r\nimport { PokemonContext } from \"./PokemonContext\";\r\n\r\nconst PokemonList = () => {\r\n  const [pokemon, setPokemon] = useContext(PokemonContext);\r\n  return (\r\n    <div>\r\n      <h1 className=\"headers\">Pokemon List</h1>\r\n      <AddPokemon />\r\n      {pokemon.map((pokemon) => (\r\n        <Pokemon name={pokemon.name} type={pokemon.type} key={pokemon.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Item({ match }) {\r\n  useEffect(() => {\r\n    fetchItem();\r\n    console.log(match.params.id);\r\n  }, []);\r\n\r\n  const [ability, setAbility] = useState([]);\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const fetchItem = async () => {\r\n    const fetchItem = await fetch(\r\n      `https://pokeapi.co/api/v2/ability/${match.params.id}`\r\n    );\r\n    const item = await fetchItem.json();\r\n    setAbility(item.pokemon);\r\n  };\r\n\r\n  const fetchImg = async (url) => {\r\n    const fetchImg = await fetch(`${url}`);\r\n    const img = await fetchImg.json();\r\n\r\n    setImage(img.sprites.front_default);\r\n  };\r\n  console.log(ability);\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Other pokemon with this ability\r\n        {ability.map((pokemon) => (\r\n          <h2>{pokemon.pokemon.name}</h2>\r\n          //   <img src={pokemon.pokemon.sprites.front_female} />\r\n        ))}\r\n        {/* {ability.map((pokemon) => (\r\n            fetchImg(pokemon.pokemon.url);\r\n           <img src={image}/> \r\n        ))} */}\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n// {items.map((item) => {\r\n//   item.abilities;\r\n// })}\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\n\r\nexport default function SearchPhotos() {\r\n  return (\r\n    <div>\r\n      <form>\r\n        <label>Image Search</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"query\"\r\n          placeholder={`Try 'Forest' or 'Christmas'`}\r\n        ></input>\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SearchPhotos from \"./SearchPhotos\";\r\n\r\nconst CardGenerator = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"headers\"> Card Generator</h1>\r\n      <h4>\r\n        Generate a get-well card or a card for the holidays with the Pokemon\r\n        Database, and a photo from Unsplash!\r\n      </h4>\r\n      <SearchPhotos />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardGenerator;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst SearchBar = ({ searchQuery, setSearchQuery }) => {\r\n  const history = useHistory();\r\n  const onSubmit = (e) => {\r\n    history.push(`?s=${searchQuery}`);\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <form\r\n        className=\"search-bar-stack\"\r\n        action=\"/\"\r\n        method=\"get\"\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <label htmlFor=\"header-search\">\r\n          <span className=\"visually-hidden search-label\">Search Pokemon: </span>\r\n        </label>\r\n        <input\r\n          value={searchQuery}\r\n          onInput={setSearchQuery}\r\n          type=\"text\"\r\n          id=\"header-search\"\r\n          placeholder=\"Search\"\r\n          name=\"s\"\r\n          className=\"search-input\"\r\n          style={{ fontFamily: \"'Sophia Pro', sans-serif\" }}\r\n        ></input>\r\n        <button className=\"search-button\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./PokemonCard.css\";\r\n\r\nconst PokemonCard = ({ pokemon }) => {\r\n  const types = pokemon.types.reduce((acc, type, i) => {\r\n    return acc + type.type.name + (i === 1 ? \"\" : \" -\");\r\n  }, \"\");\r\n\r\n  return (\r\n    <div className=\"pokemon-card\">\r\n      <h1 className=\"pokemon-card-title\">\r\n        {pokemon.entry_number}. {pokemon.name.toUpperCase()}\r\n      </h1>\r\n      <div className=\"pokemon-card-picture-border\">\r\n        <div className={`pokemon-card-picture ${types} `}>\r\n          <div className=\"pokemon-card-picture-background\">\r\n            <img src={pokemon.sprites.front_default}></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {console.log(pokemon)} */}\r\n      <div className=\"pokemon-card-types\">\r\n        <div className={`pokemon-card-types-one ${pokemon.types[0].type.name}`}>\r\n          {pokemon.types[0].type.name}\r\n        </div>\r\n        {pokemon?.types[1]?.type?.name && (\r\n          <div\r\n            className={`pokemon-card-types-two ${pokemon?.types[1]?.type?.name}`}\r\n          >\r\n            {pokemon?.types[1]?.type?.name}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        {pokemon.moves.map((move, i) => {\r\n          if (i < 3) {\r\n            return (\r\n              <p>\r\n                {i + 1}. {move.move.name.replace(\"-\", \" \")}\r\n              </p>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React from \"react\";\r\nimport \"./Announcer.css\";\r\n\r\nconst Announcer = ({ message }) => {\r\n  return (\r\n    <div className=\"announcer\" role=\"region\" aria-live=\"polite\">\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Announcer;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Pagination({\r\n  currentPage,\r\n  setCurrentPage,\r\n  searchQuery,\r\n  setSearchQuery,\r\n  data,\r\n  RenderComponent,\r\n  title,\r\n  pageLimit,\r\n  dataLimit,\r\n  loading,\r\n  setLoading,\r\n}) {\r\n  const history = useHistory();\r\n  const [pages] = useState(Math.ceil(data.length / dataLimit));\r\n\r\n  function goToNextPage() {\r\n    setCurrentPage((page) => page + 1);\r\n  }\r\n\r\n  function goToPreviousPage() {\r\n    setCurrentPage((page) => page - 1);\r\n  }\r\n\r\n  function changePage(event) {\r\n    const pageNumber = Number(event.target.textContent);\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  const getPaginatedData = () => {\r\n    const startIndex = currentPage * dataLimit - dataLimit;\r\n    const endIndex = startIndex + dataLimit;\r\n    return data.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getPaginationGroup = () => {\r\n    let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\r\n    return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\r\n  };\r\n\r\n  const incrementPageBy = (pageIncrement) => {\r\n    const currentPage = parseInt(history.location.pathname.split(\"/\").pop());\r\n    const futurePage = currentPage + pageIncrement;\r\n    if (futurePage < 1) return currentPage;\r\n    return futurePage;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"database-container\">\r\n        {getPaginatedData().map((data, index) => (\r\n          <RenderComponent key={index} pokeIndex={index} pokemon={data} />\r\n        ))}\r\n      </div>\r\n\r\n      {/* show pagination */}\r\n      <div className=\"pagination\">\r\n        {/* Previous button */}\r\n        {/* <Link to={`/database/${incrementPageBy(1)}`}>\r\n          <button className=\"pagination-detail\" onClick={goToPreviousPage}>\r\n            Prev\r\n          </button>\r\n        </Link> */}\r\n        <Link to={`/${incrementPageBy(1)}`}>\r\n          <button className=\"pagination-detail\" onClick={goToPreviousPage}>\r\n            Prev\r\n          </button>\r\n        </Link>\r\n\r\n        {/* page numbers */}\r\n        {getPaginationGroup().map((item, index) => (\r\n          // <Link to={`/database/${index + 1}`}>\r\n          //   <button\r\n          //     key={index}\r\n          //     onClick={changePage}\r\n          //     className={`pagination-detail pagination-number  paginationItem ${\r\n          //       currentPage === item ? \"active\" : null\r\n          //     }`}\r\n          //   >\r\n          //     <span>{item}</span>\r\n          //   </button>\r\n          // </Link>\r\n          <Link to={`/${index + 1}`}>\r\n            <button\r\n              key={index}\r\n              onClick={changePage}\r\n              className={`pagination-detail pagination-number  paginationItem ${\r\n                currentPage === item ? \"active\" : null\r\n              }`}\r\n            >\r\n              <span>{item}</span>\r\n            </button>\r\n          </Link>\r\n        ))}\r\n        {/* Next button */}\r\n        {/* <Link to={`/database/${incrementPageBy(-1)}`}>\r\n          <button className=\"pagination-detail\" onClick={goToNextPage}>\r\n            Next\r\n          </button>\r\n        </Link> */}\r\n        <Link to={`/${incrementPageBy(-1)}`}>\r\n          <button className=\"pagination-detail\" onClick={goToNextPage}>\r\n            Next\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const RegionSelectorContext = createContext();\r\n\r\nexport const RegionSelectorProvider = (props) => {\r\n  const [region, setRegion] = useState(\"2\");\r\n  return (\r\n    <RegionSelectorContext.Provider value={[region, setRegion]}>\r\n      {props.children}\r\n    </RegionSelectorContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { RegionSelectorContext } from \"./RegionSelectorContext\";\r\n\r\nconst RegionSelector = () => {\r\n  const [region, setRegion] = useContext(RegionSelectorContext);\r\n  const changeRegion = (e) => {\r\n    setRegion(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Region Selector</h2>\r\n      <label for=\"region-select\">Choose a region: </label>\r\n      <div className=\"select\">\r\n        <select onChange={changeRegion} name=\"region\" id=\"region-select\">\r\n          <option value=\"none\" selected disabled hidden>\r\n            Select Region\r\n          </option>\r\n          <option value=\"2\">Kanto</option>\r\n          <option value=\"3\">Johto</option>\r\n          <option value=\"4\">Hoenn</option>\r\n          <option value=\"5\">Sinnoh</option>\r\n          <option value=\"8\">Unova</option>\r\n          <option value=\"12\">Kalos</option>\r\n          <option value=\"16\">Alola</option>\r\n          <option value=\"20\">Galar</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegionSelector;\r\n","import React from \"react\";\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst LoaderGUI = () => {\r\n  // const { promiseInProgress } = usePromiseTracker();\r\n  // return promiseInProgress && <h2>I'm loading!</h2>;\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Loader type=\"Grid\" color=\"lightcoral\" height=\"100\" width=\"100\"></Loader>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderGUI;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Bluebird from \"bluebird\";\r\n\r\nimport { trackPromise } from \"react-promise-tracker\";\r\n\r\nexport const FetchPokemonList = async ({\r\n  pokemon,\r\n  setPokemon,\r\n  region,\r\n  loading,\r\n  setLoading,\r\n}) => {\r\n  try {\r\n    const { data: dataN } =\r\n      await axios.get(`https://pokeapi.co/api/v2/pokedex/${region}/\r\n\r\n  `);\r\n\r\n    // const pokemonEntryNumberArray = await Bluebird.map(dataN.pokemon_entries)\r\n\r\n    const detailedPokeArr = await Bluebird.map(\r\n      dataN.pokemon_entries,\r\n      async (poke, i) => {\r\n        // if (i % 2 === 0) return;\r\n        const { data } = await axios.get(poke.pokemon_species.url);\r\n\r\n        const { data: finalData } = await axios.get(\r\n          data.varieties[0].pokemon.url\r\n        );\r\n\r\n        finalData[\"entry_number\"] = poke.entry_number;\r\n\r\n        return finalData;\r\n      }\r\n    );\r\n\r\n    // Old method - using limit\r\n    //     const data = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=75\r\n    // `);\r\n\r\n    //     const pokemonData = await data.json();\r\n\r\n    //     const enhancedPokeData = await Promise.all(\r\n    //       pokemonData.results.map(async (poke) => {\r\n    //         let extraData = await fetch(poke.url);\r\n    //         extraData = await extraData.json();\r\n    //         poke.details = extraData;\r\n    //         return poke;\r\n    //       })\r\n    //     );\r\n\r\n    setPokemon(detailedPokeArr);\r\n    setLoading(false);\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n  }\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport PokemonCard from \"./PokemonCard\";\r\nimport Announcer from \"./Announcer\";\r\nimport Pagination from \"./Pagination\";\r\nimport RegionSelector from \"./RegionSelector\";\r\nimport \"./Database.css\";\r\n\r\nimport LoaderGUI from \"./LoaderGUI\";\r\n\r\nimport { FetchPokemonList } from \"./FetchPokemonList\";\r\n\r\nimport \"./Paginator.css\";\r\nimport {\r\n  RegionSelectorContext,\r\n  RegionSelectorProvider,\r\n} from \"./RegionSelectorContext\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Database() {\r\n  // Regions coming from RegionSelector controlled by Context\r\n  const [region, setRegion] = useContext(RegionSelectorContext);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    FetchPokemonList({\r\n      pokemon: pokemon,\r\n      setPokemon: setPokemon,\r\n      region: region,\r\n      loading: loading,\r\n      setLoading: setLoading,\r\n    });\r\n  }, [region]);\r\n\r\n  // Search bar functionality\r\n  const { search } = window.location;\r\n  const query = new URLSearchParams(search).get(\"s\");\r\n\r\n  const filterPokemon = (mons, query) => {\r\n    if (!query) {\r\n      return mons;\r\n    }\r\n\r\n    return mons.filter((mon) => {\r\n      return mon.name.includes(query);\r\n    });\r\n  };\r\n\r\n  const [pokemon, setPokemon] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(query || \"\");\r\n  const filteredMons = filterPokemon(pokemon, searchQuery);\r\n  // Search bar functionality\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // Pagination\r\n\r\n  // const fetchPokemon = async (pokemon, setPokemon) => {\r\n  //   const data = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=75\r\n  //   `);\r\n\r\n  //   const pokemonData = await data.json();\r\n\r\n  //   const enhancedPokeData = await Promise.all(\r\n  //     pokemonData.results.map(async (poke) => {\r\n  //       let extraData = await fetch(poke.url);\r\n  //       extraData = await extraData.json();\r\n  //       poke.details = extraData;\r\n  //       return poke;\r\n  //     })\r\n  //   );\r\n\r\n  //   setPokemon(enhancedPokeData);\r\n  // };\r\n\r\n  const handleSearchQuery = (e) => {\r\n    if (currentPage !== 1) setCurrentPage(1);\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const regionsList = {\r\n    2: \"Kanto\",\r\n    3: \"Johto\",\r\n    4: \"Hoenn\",\r\n    5: \"Sinnoh\",\r\n    8: \"Unova\",\r\n    12: \"Kalos\",\r\n    16: \"Alola\",\r\n    20: \"Galar\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <RegionSelectorProvider> */}\r\n      <h1 className=\"headers\">{regionsList[region]} Pokemon Database</h1>\r\n      <div className=\"categories-bar-REMOVE\">\r\n        <RegionSelector />\r\n        <SearchBar\r\n          searchQuery={searchQuery}\r\n          setSearchQuery={handleSearchQuery}\r\n        />\r\n        {loading ? (\r\n          <LoaderGUI />\r\n        ) : (\r\n          <div className=\"database-container\">\r\n            {filteredMons.map((mon) => (\r\n              <PokemonCard pokemon={mon} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* {loading ? (\r\n        <LoaderGUI />\r\n      ) : (\r\n        <Pagination\r\n          searchQuery={searchQuery}\r\n          setSearchQuery={setSearchQuery}\r\n          currentPage={currentPage}\r\n          setCurrentPage={setCurrentPage}\r\n          data={filteredMons}\r\n          RenderComponent={PokemonCard}\r\n          title=\"Pokemon Title\"\r\n          pageLimit={6}\r\n          dataLimit={20}\r\n          loading={loading}\r\n          setLoading={setLoading}\r\n        />\r\n      )} */}\r\n      <Announcer message={`Found ${filteredMons.length} pokemon`} />\r\n      {/* </RegionSelectorProvider> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Database;\r\n","import React from \"react\";\r\n\r\nconst BackgroundImage = () => {\r\n  return <div>Backgroundimage</div>;\r\n};\r\n\r\nexport default BackgroundImage;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Nav from \"./Nav\";\r\nimport About from \"./About\";\r\nimport Shop from \"./Shop\";\r\nimport PokemonList from \"./PokemonList\";\r\nimport ItemDetail from \"./ItemDetail\";\r\nimport AddPokemon from \"./AddPokemon\";\r\nimport CardGenerator from \"./CardGenerator\";\r\nimport Database from \"./Database\";\r\nimport { PokemonProvider } from \"./PokemonContext\";\r\nimport { RegionSelectorProvider } from \"./RegionSelectorContext\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport BackgroundImage from \"./BackgroundImage\";\r\nimport SearchPhotos from \"./SearchPhotos\";\r\n\r\nimport \"../styles/main.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <PokemonProvider>\r\n        <div className=\"app\">\r\n          <Nav />\r\n          <BackgroundImage />\r\n          <SearchPhotos />\r\n\r\n          <Switch>\r\n            {/* <Route path=\"/:pageNumber\" component={Database} /> */}\r\n            <Route path=\"/cardgenerator\" component={CardGenerator} />\r\n            <Route path=\"/about\" component={About} />\r\n            {/* <RegionSelectorProvider>\r\n              <Route path=\"/database\" component={Database} />\r\n            </RegionSelectorProvider>\r\n            <Route path=\"/database/:pageNumber\" component={Database} /> */}\r\n            <Route path=\"/shop\" exact component={Shop} />\r\n            <Route path=\"/shop/:id\" component={ItemDetail} />\r\n            <Route path=\"/pokemonlist\" component={PokemonList} />\r\n            <RegionSelectorProvider>\r\n              <Route path=\"/\" exact component={Database} />\r\n            </RegionSelectorProvider>\r\n          </Switch>\r\n        </div>\r\n      </PokemonProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h1>Home Page</h1>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./components/App.css\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}